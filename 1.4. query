/* copying 1.3 query, removing limit 500, wrapping 1.3 query into cte query_2, adding teritory_id to query 1 and 2*/

WITH ind_customer_tab AS
(SELECT
  CustomerID AS customer_id,
  CustomerType AS customer_type,
  AccountNumber AS customer_account_number,
  TerritoryID AS territory_id
FROM
  `adwentureworks_db.customer` customer
WHERE
  CustomerType = 'I'),

latest_addressID_tab AS
(SELECT
  ind_customer_tab.customer_id AS customer_id,
  max(customer_address.AddressID) AS latest_address_id
FROM ind_customer_tab
LEFT JOIN `adwentureworks_db.customeraddress` AS customer_address
ON ind_customer_tab.customer_id = customer_address.CustomerID
GROUP BY customer_id),

location_info_tab AS
(SELECT
  latest_addressID_tab.customer_id AS customer_id,
  latest_addressID_tab.latest_address_id AS address_id,
  address.city AS city,
  address.AddressLine1 AS address_line1,
  address.AddressLine2 AS address_line2,
  CONCAT(address.AddressLine1, ' ', COALESCE(address.AddressLine2, '#')) full_address,
  state_province.name AS state_name,
  country.name AS country_name,
  tax_tab.TaxRate as tax_rate
FROM latest_addressID_tab
LEFT JOIN `adwentureworks_db.address` address
ON latest_addressID_tab.latest_address_id = address.AddressID
LEFT JOIN `adwentureworks_db.stateprovince`state_province
ON address.StateProvinceID = state_province.stateProvinceID
LEFT JOIN `adwentureworks_db.countryregion` AS country
ON state_province.CountryRegionCode = country.CountryRegionCode
LEFT JOIN `adwentureworks_db.salestaxrate` tax_tab
ON state_province.StateProvinceID = tax_tab.StateProvinceID),

identity_info_tab AS
(SELECT
  ind_customer_tab.customer_id AS customer_id,
  contact.Firstname AS first_name,
  contact.LastName AS last_name,
  CONCAT(contact.Firstname, ' ', contact.LastName) AS full_name,
  COALESCE(contact.title, 'Dear') AS title,
  contact.Emailaddress AS email,
  contact.Phone AS phone
  FROM ind_customer_tab
LEFT JOIN `adwentureworks_db.individual` AS individual
ON ind_customer_tab.customer_id = individual.CustomerID
LEFT JOIN `adwentureworks_db.contact` AS contact
ON individual.ContactID = contact.ContactId),

sales_tab AS
(SELECT
  ind_customer_tab.customer_id,
  sales.AccountNumber AS account_number,
  SUM(sales.TotalDue) AS total_due,
  SUM(sales.SubTotal) AS sub_total,
  SUM(sales.TaxAmt) AS tax_amt,
  SUM(sales.SubTotal) + SUM(sales.TaxAmt) AS total_with_tax,
  count(sales.OrderDate) AS number_of_orders,
  MAX(sales.OrderDate) AS date_last_order
FROM ind_customer_tab
LEFT JOIN `adwentureworks_db.salesorderheader` AS sales
ON ind_customer_tab.customer_id = sales.customerID
GROUP BY 1,2),

query_1 AS
(SELECT DISTINCT
  ind_customer_tab.customer_id AS customer_id,
  /* adding territory_id from ind_customer_id, to retrieve territory group 'North America' from SalesTerritory table*/
  ind_customer_tab.territory_id AS territory_id,
  identity_info_tab.first_name AS first_name,
  identity_info_tab.last_name AS last_name,
  identity_info_tab.full_name AS full_name,
  CONCAT(identity_info_tab.title, ' ', identity_info_tab.last_name) AS addressing_tite,
  identity_info_tab.email AS email,
  identity_info_tab.phone AS phone,
  ind_customer_tab.customer_account_number AS account_numer,
  ind_customer_tab.customer_type customer_type,
  location_info_tab.city AS city,
  location_info_tab.address_line1 AS address_line1,
  location_info_tab.address_line2 AS address_line2,
  location_info_tab.state_name AS state,
  location_info_tab.country_name AS country,
  sales_tab.number_of_orders number_of_orders,
  ROUND(sales_tab.total_due, 3) AS total_amount,
  sales_tab.date_last_order AS date_last_order
FROM ind_customer_tab
LEFT JOIN location_info_tab
ON ind_customer_tab.customer_id = location_info_tab.customer_id
LEFT JOIN identity_info_tab
ON identity_info_tab.customer_id = location_info_tab.customer_id
LEFT JOIN sales_tab
ON location_info_tab.customer_id = sales_tab.customer_id
ORDER BY total_amount DESC),

/*wrapping query 1.3 into cte query_2*/
query_2 AS
(SELECT
  customer_id,
  first_name,
  last_name,
  full_name,
  addressing_tite,
  email,
  phone,
  account_numer,
  customer_type,
  city,
  address_line1,
  address_line2,
  state,
  country,
  number_of_orders,
  total_amount,
  date_last_order,
  CASE
    WHEN query_1.date_last_order < (SELECT DATETIME_SUB(MAX(Orderdate), INTERVAL 365 DAY) FROM `adwentureworks_db.salesorderheader`)
    THEN 'inactive'
  ELSE 'active'
  END AS activity,
  /*adding territory_id*/
  territory_id
FROM query_1
ORDER BY customer_id DESC)

/*creating 1.4 solution*/
SELECT
  query_2.customer_id,
  query_2.first_name,
  query_2.last_name,
  query_2.full_name,
  query_2.addressing_tite,
  query_2.email,
  query_2.phone,
  query_2.account_numer,
  query_2.customer_type,
  query_2.city,
  query_2.address_line1,
  /*dividing address_line 1 into two columns address_no and sddress_st*/
  LEFT(query_2.address_line1, STRPOS(query_2.address_line1, ' ')-1) AS address_no,
  SUBSTR(query_2.address_line1, STRPOS(query_2.address_line1, ' ')+1) AS address_st,
  query_2.address_line2,
  query_2.state,
  query_2.country,
  query_2.number_of_orders,
  query_2.total_amount,
  query_2.date_last_order,
  query_2.activity,
  territory.Group territory_group
FROM query_2
/* joining with SalesTerritory table to retrive territory group*/
JOIN `adwentureworks_db.salesterritory` territory
ON query_2.territory_id = territory.TerritoryID
/* filtering all active customers from North America. Only customers that have either ordered no less than 2500 in total amount (with Tax) or ordered 5 + times*/
WHERE query_2.activity = 'active' AND territory.Group = 'North America' AND (query_2.total_amount >= 2500 OR query_2.number_of_orders >= 5)
ORDER BY query_2.country, query_2.state, query_2.date_last_order;

/* query result 2.058 rows*/
