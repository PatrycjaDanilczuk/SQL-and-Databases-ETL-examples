/* copying query 1, wrapping query 1 into CTE query_1 to perform solution for task 1.2*/

WITH ind_customer_tab AS
(SELECT
  CustomerID AS customer_id,
  CustomerType AS customer_type,
  AccountNumber AS customer_account_number,
  TerritoryID AS territory_id
FROM
  `adwentureworks_db.customer` customer
WHERE
  CustomerType = 'I'),

latest_addressID_tab AS
(SELECT
  ind_customer_tab.customer_id AS customer_id,
  max(customer_address.AddressID) AS latest_address_id
FROM ind_customer_tab
LEFT JOIN `adwentureworks_db.customeraddress` AS customer_address
ON ind_customer_tab.customer_id = customer_address.CustomerID
GROUP BY customer_id),

location_info_tab AS
(SELECT
  latest_addressID_tab.customer_id AS customer_id,
  latest_addressID_tab.latest_address_id AS address_id,
  address.city AS city,
  address.AddressLine1 AS address_line1,
  address.AddressLine2 AS address_line2,
  CONCAT(address.AddressLine1, ' ', COALESCE(address.AddressLine2, '#')) full_address,
  state_province.name AS state_name,
  country.name AS country_name,
  tax_tab.TaxRate as tax_rate
FROM latest_addressID_tab
LEFT JOIN `adwentureworks_db.address` address
ON latest_addressID_tab.latest_address_id = address.AddressID
LEFT JOIN `adwentureworks_db.stateprovince`state_province
ON address.StateProvinceID = state_province.stateProvinceID
LEFT JOIN `adwentureworks_db.countryregion` AS country
ON state_province.CountryRegionCode = country.CountryRegionCode
LEFT JOIN `adwentureworks_db.salestaxrate` tax_tab
ON state_province.StateProvinceID = tax_tab.StateProvinceID),

identity_info_tab AS
(SELECT
  ind_customer_tab.customer_id AS customer_id,
  contact.Firstname AS first_name,
  contact.LastName AS last_name,
  CONCAT(contact.Firstname, ' ', contact.LastName) AS full_name,
  COALESCE(contact.title, 'Dear') AS title,
  contact.Emailaddress AS email,
  contact.Phone AS phone
  FROM ind_customer_tab
LEFT JOIN `adwentureworks_db.individual` AS individual
ON ind_customer_tab.customer_id = individual.CustomerID
LEFT JOIN `adwentureworks_db.contact` AS contact
ON individual.ContactID = contact.ContactId),

sales_tab AS
(SELECT
  ind_customer_tab.customer_id,
  sales.AccountNumber AS account_number,
  SUM(sales.TotalDue) AS total_due,
  SUM(sales.SubTotal) AS sub_total,
  SUM(sales.TaxAmt) AS tax_amt,
  SUM(sales.SubTotal) + SUM(sales.TaxAmt) AS total_with_tax,
  count(sales.OrderDate) AS number_of_orders,
  MAX(sales.OrderDate) AS date_last_order
FROM ind_customer_tab
LEFT JOIN `adwentureworks_db.salesorderheader` AS sales
ON ind_customer_tab.customer_id = sales.customerID
GROUP BY 1,2),

/* wrapping 1.1 task final table into CTE query_1*/
query_1 AS
(SELECT DISTINCT
  ind_customer_tab.customer_id AS customer_id,
  identity_info_tab.first_name AS first_name,
  identity_info_tab.last_name AS last_name,
  identity_info_tab.full_name AS full_name,
  CONCAT(identity_info_tab.title, ' ', identity_info_tab.last_name) AS addressing_tite,
  identity_info_tab.email AS email,
  identity_info_tab.phone AS phone,
  ind_customer_tab.customer_account_number AS account_numer,
  ind_customer_tab.customer_type customer_type,
  location_info_tab.city AS city,
  location_info_tab.address_line1 AS address_line1,
  location_info_tab.address_line2 AS address_line2,
  location_info_tab.state_name AS state,
  location_info_tab.country_name AS country,
  sales_tab.number_of_orders number_of_orders,
  ROUND(sales_tab.total_due, 3) AS total_amount,
  sales_tab.date_last_order AS date_last_order
FROM ind_customer_tab
LEFT JOIN location_info_tab
ON ind_customer_tab.customer_id = location_info_tab.customer_id
LEFT JOIN identity_info_tab
ON identity_info_tab.customer_id = location_info_tab.customer_id
LEFT JOIN sales_tab
ON location_info_tab.customer_id = sales_tab.customer_id
ORDER BY total_amount DESC) /* removing limit from the first query*/


/* creating 1.2 solution: looking for customers from query 1 that placed their last order before 365 days from current date, which is defined as latest order date from SalesOrderHeader table ("Note that the database is old and the current date should be defined by finding the latest order date in the orders table");
query 1 contains last_date_order for each customer = date each customer made his last order, that can be compared to current date minus 365 days (last date from SalesOdrerheader minus 365 days), to find customers that made their last order (last_date_order) before that date*/

SELECT *
FROM query_1
WHERE query_1.date_last_order <
(SELECT DATETIME_SUB(MAX(Orderdate), INTERVAL 365 DAY) FROM `adwentureworks_db.salesorderheader`)
ORDER BY query_1.total_amount DESC;
